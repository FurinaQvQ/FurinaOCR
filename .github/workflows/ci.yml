name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test and Build
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 确保检出时使用正确的换行符
          autocrlf: false
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check code formatting
        run: cargo fmt --all -- --check
      
      - name: Run Clippy (linter)
        run: cargo clippy --all-targets -- -D warnings
      
      - name: Build project
        run: cargo build --release --verbose
      
      - name: Run tests
        run: cargo test --verbose
      
      - name: Check artifact scanner compiles
        run: cargo check -p genshin
      
      - name: Check core library compiles  
        run: cargo check -p furina_core

  audit:
    name: Security Audit
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 确保检出时使用正确的换行符
          autocrlf: false
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: cargo audit 